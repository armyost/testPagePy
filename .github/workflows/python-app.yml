# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

    secrets:
      APP_ID:
        required: true
      APP_PRIVATE_KEY:
        required: true
  push:
    branches: [ "master" ]
  # pull_request:
    # branches: [ "master" ]

permissions:
  contents: write
  id-token: write

  

env:
  BASE_BRANCH: "master"       # source code branch for pipeline
  APP_NAME: "sample-app"      # image name, application name
  K8S_NAMESPACE: "sample-ns"  # k8s-namespace
  BUILD_PATH: "dist"          # directory for distributing artifacts
  GAR_URL: "europe-west1-docker.pkg.dev/sample-prj-231220/sample-img-registry" # Image registry path
  REGION: "europe-west1"      # GCP location
  PYTHON_VERSION: "3.10"      # source code development kit version
  MANIFEST_PATH: "manifest"   # manifests directory path
  GKE_CLUSTER: "sample-cluster"
  GKE_ZONE: "europe-west1"

jobs:
  source-code-build-job: # Build artifacts job
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    # Configuration and checkout
    steps:
    - uses: actions/checkout@v3

    - name: Generate a token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    - name: Use the token
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        echo $GH_TOKEN
        env


    - name: Check Point
      run: |
        touch sec.txt
        echo $GH_TOKEN >> sec.txt
        cat sec.txt
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}

  
    # Checkout Config Repo Repository and apply new image name
    - name: Checkout Config Repo
      uses: actions/checkout@v4
      with:
          repository: armyost/testPage
          ref: master
          token: ${{ steps.generate-token.outputs.token }}

    # Git config setup
    - name: Git Config
      id: config-git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        echo "date-build=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
    
    # Update image path
    - name: RELEASE Update the image
      run: |
        ls -al
        touch TEST-README.md

    # Commit remote repo
    - name: Commit and Push
      run: |
        git add .
        git commit -m "committed by another repo"
        git push
